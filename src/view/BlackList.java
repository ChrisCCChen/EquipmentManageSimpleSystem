/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import util.DbUtil;
import util.StringUtil;

/**
 *
 * @author ZP Chen
 */
public class BlackList extends javax.swing.JInternalFrame {

    /**
     * Creates new form BlackListAddInternalFrame
     */
    private String type = "学生";
    private String ID;
    DbUtil dbUtil = new DbUtil();
    public BlackList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        IDText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        stuRadioButton = new javax.swing.JRadioButton();
        teaRadioButton = new javax.swing.JRadioButton();
        addBlackButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        addWhiteButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("黑名单");

        jLabel9.setBackground(new java.awt.Color(255, 0, 0));
        jLabel9.setFont(new java.awt.Font("华文行楷", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("请输入正确位数的学号（14位）/教工号（11位）！");

        jLabel1.setFont(new java.awt.Font("华文行楷", 0, 24)); // NOI18N
        jLabel1.setText("学号/教工号");

        IDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDTextActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("华文行楷", 0, 24)); // NOI18N
        jLabel3.setText("类型");

        stuRadioButton.setSelected(true);
        stuRadioButton.setText("学生");
        stuRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stuRadioButtonActionPerformed(evt);
            }
        });

        teaRadioButton.setText("教师");
        teaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teaRadioButtonActionPerformed(evt);
            }
        });

        addBlackButton.setFont(new java.awt.Font("华文行楷", 0, 18)); // NOI18N
        addBlackButton.setText("置黑");
        addBlackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBlackButtonActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("华文行楷", 0, 18)); // NOI18N
        resetButton.setText("重置");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/no-stopping.png"))); // NOI18N

        addWhiteButton.setFont(new java.awt.Font("华文行楷", 0, 18)); // NOI18N
        addWhiteButton.setText("洗白");
        addWhiteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWhiteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stuRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(teaRadioButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(addBlackButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addWhiteButton)
                                    .addGap(42, 42, 42)
                                    .addComponent(resetButton))
                                .addComponent(IDText, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel9))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel9)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(stuRadioButton)
                            .addComponent(teaRadioButton))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IDText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBlackButton)
                            .addComponent(resetButton)
                            .addComponent(addWhiteButton))))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDTextActionPerformed

    private void stuRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stuRadioButtonActionPerformed
        // TODO add your handling code here:
        if(!this.stuRadioButton.isSelected()){
            this.stuRadioButton.setSelected(true);
        }
        this.teaRadioButton.setSelected(false);
        type = this.stuRadioButton.getText();
        //System.out.println(stuSex);
    }//GEN-LAST:event_stuRadioButtonActionPerformed

    private void teaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teaRadioButtonActionPerformed
        // TODO add your handling code here:
        if(!this.teaRadioButton.isSelected()){
            this.teaRadioButton.setSelected(true);
        }
        this.stuRadioButton.setSelected(false);
        type = this.teaRadioButton.getText();
        //System.out.println(stuSex);
    }//GEN-LAST:event_teaRadioButtonActionPerformed

    private void addBlackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBlackButtonActionPerformed

        // TODO add your handling code here:
        //添加黑名单
        try{
            addBlackAcitonPerformed(evt);
        }catch(Exception e){
        }
    }//GEN-LAST:event_addBlackButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        //重置操作
        resetValues();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void addWhiteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWhiteButtonActionPerformed
        // TODO add your handling code here:
        //取消黑名单
        try{
            addWhiteAcitonPerformed(evt);
        }catch(Exception e){
        }
    }//GEN-LAST:event_addWhiteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDText;
    private javax.swing.JButton addBlackButton;
    private javax.swing.JButton addWhiteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton resetButton;
    private javax.swing.JRadioButton stuRadioButton;
    private javax.swing.JRadioButton teaRadioButton;
    // End of variables declaration//GEN-END:variables

    private void addBlackAcitonPerformed(ActionEvent evt) throws Exception {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        ID = this.IDText.getText();
        boolean checker = checkInput();//检查输入是否合法
        if(checker){
            boolean result = userIsInDb(ID);//判断该用户是否存在
            if(result)
            {
                updateBlackList(ID,true);//更新黑名单字段数据
            }
            else{
                JOptionPane.showMessageDialog(null, "该用户不存在！");
            }
        }
    }

    private void addWhiteAcitonPerformed(ActionEvent evt) throws Exception {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        ID = this.IDText.getText();
        boolean checker = checkInput();//检查输入是否合法
        if(checker){
            boolean result = userIsInDb(ID);//判断该用户是否存在
            if(result)
            {
                updateBlackList(ID,false);//更新黑名单字段数据
            }
            else{
                JOptionPane.showMessageDialog(null, "该用户不存在！");
            }
        }
    }

    private void resetValues() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        this.IDText.setText("");
        this.stuRadioButton.setSelected(true);
        this.teaRadioButton.setSelected(false);
        type = this.stuRadioButton.getText();
    }

    private void updateBlackList(String ID,boolean isBlack) throws Exception {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        Connection con = null;
        con = dbUtil.getConnection();
        String sql;
        if(type.equals("学生")){
            sql = "update Student set stuIsBlackList = ? where stuID = ?";
        }
        else{
            sql = "update Teacher set teaIsBlackList = ? where teaID = ?";
        }
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(2, ID);
        int executeUpdate = 0;
        if(isBlack){//置黑操作
            pstmt.setString(1, "Yes");
            try{
                executeUpdate = pstmt.executeUpdate();
                
            }catch(SQLException | HeadlessException e){
                
            }
            finally{
                con.close();
            }
            if(executeUpdate == 1){
                JOptionPane.showMessageDialog(null, "置黑成功！");
                resetValues();
            }
            else{
                JOptionPane.showMessageDialog(null, "置黑失败！");
            }
        }
        else{//洗白操作
            pstmt.setString(1, "No");
            try{
                executeUpdate = pstmt.executeUpdate();
                
            }catch(SQLException | HeadlessException e){
                
            }
            finally{
                con.close();
            }
            if(executeUpdate == 1){
                JOptionPane.showMessageDialog(null, "洗白成功！");
                resetValues();
            }
            else{
                JOptionPane.showMessageDialog(null, "洗白失败！");
            }
        }
    }

    private boolean userIsInDb(String ID) throws SQLException, Exception {//判断用户是否存在
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        Connection con = dbUtil.getConnection();
        if(type.equals("学生")){
            String sql = "select * from Student where stuID = ?";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, ID);
            ResultSet rs = pstmt.executeQuery();
            if(rs.next()){//结果为空
                con.close();
                return true;
            }
            else{
                con.close();
                return false;
            }
        }
        else{
            String sql = "select * from Teacher where teaID = ?";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, ID);
            ResultSet rs = pstmt.executeQuery();
            if(rs.next()){//结果为空
                con.close();
                return true;
            }
            else{
                con.close();
                return false;
            }
        }
    }

    private boolean checkInput() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        if(type.equals("学生")){
            if(StringUtil.isEmpty(ID)){
                JOptionPane.showMessageDialog(null,"学号不能为空！");
                return false;
            }
            if(!StringUtil.isAllNumber(ID)){
                JOptionPane.showMessageDialog(null,"学号不为纯数字！");
                return false;
            }
            if(ID.length() != 14){
                JOptionPane.showMessageDialog(null,"学号不为14位！");
                return false;
            }
        }
        else{
            if(StringUtil.isEmpty(ID)){
                JOptionPane.showMessageDialog(null,"教工号不能为空！");
                return false;
            }
            if(!StringUtil.isAllNumber(ID)){
                JOptionPane.showMessageDialog(null,"教工号不为纯数字！");
                return false;
            }
            if(ID.length() != 11){
                JOptionPane.showMessageDialog(null,"教工号不为11位！");
                return false;
            }
        }
        return true;
    }
}
